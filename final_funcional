#include <Wire.h>
#include <LiquidCrystal.h>
#include <SoftwareSerial.h>

// Configuração dos pinos
#define rxPin 13  // RX do módulo Bluetooth
#define txPin 12  // TX do módulo Bluetooth

LiquidCrystal lcd(7, 6, 5, 4, 3, 2); // Pinos do LCD
const int bomba1 = 8;  // Pino da bomba 1
const int bomba2 = 9; // Pino da bomba 2
const int bomba3 = 10; // Pino da bomba 3

SoftwareSerial BTserial(rxPin, txPin); // Comunicação Bluetooth (RX, TX)

String comandoRecebido = "";

void setup() {
  // Inicializar comunicação serial e LCD
  Serial.begin(9600);    // Serial Monitor
  BTserial.begin(9600);  // Bluetooth
  lcd.begin(16, 2);      // LCD 16x2

  // Configurar pinos das bombas como saída
  pinMode(bomba1, OUTPUT);
  pinMode(bomba2, OUTPUT);
  pinMode(bomba3, OUTPUT);

  // Exibir mensagem inicial no LCD
  lcd.setCursor(0, 0);
  lcd.print("Escolha a bebida");
  lcd.setCursor(0, 1);
  lcd.print("Aguardando...");

  Serial.println("Sistema inicializado e aguardando comandos.");
}

void loop() {
  // Verificar se há dados disponíveis no Bluetooth
  if (BTserial.available() > 0) {
    comandoRecebido = BTserial.readString(); // Ler comando do Bluetooth
    comandoRecebido.trim();                  // Remover espaços extras

    Serial.print("Comando recebido: ");
    Serial.println(comandoRecebido);

    // Processar o comando recebido
    if (comandoRecebido == "27") {
      prepararBebida(1, 10000); // Bebida 1
    } 
    else if (comandoRecebido == "28") {
      prepararBebida(2, 20000); // Bebida 2
    } 
    else if (comandoRecebido == "29") {
      prepararBebida(3, 20000); // Bebida 3
    } 
    else if (comandoRecebido == "30") {
      prepararBebida(1, 10000);  // Bebida 1 (metade)
      prepararBebida(2, 10000);  // Bebida 2 (metade)
    } 
    else if (comandoRecebido == "31") {
      prepararBebida(2, 10000);  // Bebida 2 (metade)
      prepararBebida(3, 10000);  // Bebida 3 (metade)
    } 
    else if (comandoRecebido == "32") {
      prepararBebida(3, 10000);  // Bebida 3 (metade)
      prepararBebida(1, 10000);  // Bebida 1 (metade)
    }
    else if (comandoRecebido == "42") {
      ligarTodasBombas(20000); // Ligar todas as bombas por 5 segundos
    }
    else if (comandoRecebido == "43") {
      ligarBomba(1, 20000); // Ligar bomba 1 por 5 segundos
    }
    else if (comandoRecebido == "44") {
      ligarBomba(2, 20000); // Ligar bomba 2 por 5 segundos
    }
    else if (comandoRecebido == "45") {
      ligarBomba(3, 20000); // Ligar bomba 3 por 5 segundos
    }
    else if (comandoRecebido == "46") {
      cancelarTodasBombas(); // Cancelar funcionamento de todas as bombas
    }
    else {
      Serial.println("Comando inválido!");
    }
  } else {
    // Mensagem de debug
    Serial.println("Aguardando comando Bluetooth...");
    delay(1000); // Reduz a frequência do loop para evitar sobrecarga
  }
}

void prepararBebida(int bebida, int tempo) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Preparando...");

  Serial.print("Preparando bebida ");
  Serial.print(bebida);
  Serial.print(" por ");
  Serial.print(tempo);
  Serial.println(" ms");

  // Controlar a bomba correspondente
  if (bebida == 1) {
    digitalWrite(bomba1, HIGH);
    delay(tempo);
    digitalWrite(bomba1, LOW);
  } 
  else if (bebida == 2) {
    digitalWrite(bomba2, HIGH);
    delay(tempo);
    digitalWrite(bomba2, LOW);
  } 
  else if (bebida == 3) {
    digitalWrite(bomba3, HIGH);
    delay(tempo);
    digitalWrite(bomba3, LOW);
  }

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Concluido!");

  Serial.println("Bebida pronta.");

  delay(3000); // Esperar antes de reiniciar

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Escolha a bebida");
  lcd.setCursor(0, 1);
  lcd.print("Aguardando...");
}

void ligarTodasBombas(int tempo) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Ligando todas...");
  
  Serial.println("Ligando todas as bombas.");
  
  digitalWrite(bomba1, HIGH);
  digitalWrite(bomba2, HIGH);
  digitalWrite(bomba3, HIGH);
  delay(tempo);
  digitalWrite(bomba1, LOW);
  digitalWrite(bomba2, LOW);
  digitalWrite(bomba3, LOW);

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Todas desligadas.");
  
  Serial.println("Todas as bombas foram desligadas.");
}

void ligarBomba(int bomba, int tempo) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Ligando bomba ");
  lcd.print(bomba);

  Serial.print("Ligando bomba ");
  Serial.print(bomba);
  Serial.print(" por ");
  Serial.print(tempo);
  Serial.println(" ms");

  if (bomba == 1) {
    digitalWrite(bomba1, HIGH);
    delay(tempo);
    digitalWrite(bomba1, LOW);
  } else if (bomba == 2) {
    digitalWrite(bomba2, HIGH);
    delay(tempo);
    digitalWrite(bomba2, LOW);
  } else if (bomba == 3) {
    digitalWrite(bomba3, HIGH);
    delay(tempo);
    digitalWrite(bomba3, LOW);
  }

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Bomba desligada.");
  
  Serial.println("Bomba desligada.");
}

void cancelarTodasBombas() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Cancelando...");
  
  Serial.println("Cancelando todas as bombas.");

  digitalWrite(bomba1, LOW);
  digitalWrite(bomba2, LOW);
  digitalWrite(bomba3, LOW);

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Operacao cancelada.");
  
  Serial.println("Todas as bombas desligadas.");
}
